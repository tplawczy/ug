library(genalg)
z=rbind(c(1,1,1,1,1,1,1,1,1,1,1,1),
        c(1,0,0,0,1,0,0,0,1,0,0,1),
        c(1,1,1,0,0,0,1,0,1,1,0,1),
        c(1,0,0,0,1,0,1,0,0,0,0,1),
        c(1,0,1,0,1,1,0,0,1,1,0,1),
        c(1,0,0,1,1,0,0,0,1,0,0,1),
        c(1,0,0,0,0,0,1,0,0,0,1,1),
        c(1,0,1,0,0,1,1,0,1,0,0,1),
        c(1,0,1,1,1,0,0,0,1,1,0,1),
        c(1,0,1,0,1,1,0,1,0,1,0,1),
        c(1,0,1,0,0,0,0,0,0,0,0,1),
        c(1,1,1,1,1,1,1,1,1,1,1,1))
library(genalg)
chromosome = c(0, 1, 0, 1, 1, 0, 0,1,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,1,1,
               1, 0, 0, 1, 1, 0, 0,1,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,1,1,
               1, 0, 0, 1, 1, 0, 0,1,1,0,0,1,1,0,1,0,0,0,1,1,0,1,0,1,1,
               0,0,1,1,0)
#hromosome[c(6)]
#p=0,1 l=1,0 g=1,1 d=0,0
#dataset[chromosome == 1, ]


evalFunc <- function (x) {
  i=1
  o=2
  p=2
  
  ilosc=0
  w=0
  while(i==80 ){
   
    n=x[c(i)]
    i=i+1
    m=x[c(i)]
    i=i+1
    u=0
    y=0
    
    
    while(z[(o+u),(p+y)]==0)
    {
    if(n==0&m==0)
    {  u=1 
       y=0
    }
    else
    {  u=0 
       y=0
    }
    
    
     if (n==1&m==1)
     {  u=-1 
        y=0
     }
      else
      {  u=0 
         y=0
      }
       
     if (n==1&m==0)
       
        {  u=0 
           y=1
        }
          else
      {  u=0 
         y=0
      }
     if (n==0&m==1)
     {  u=0 
        y=-1
     }
          else
      {  u=0 
         y=0
      }
  }
    
      o=o+u
      p=p+y}
      ilosc++
  


if (ilosc>20)
return(0)
else return (1/(sqrt((12-o)^2+(12-p)^2)))

     
    
}
  
  






iter = 100
GAmodel <- rbga.bin(size = 80, popSize = 200, iters = iter, mutationChance = 0.05, 
                    elitism = T, evalFunc = evalFunc)
cat(genalg:::summary.rbga(GAmodel))

